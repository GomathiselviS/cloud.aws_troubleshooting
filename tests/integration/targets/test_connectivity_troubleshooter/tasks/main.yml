---
- name: Set 'image_id' from AMI information
  ansible.builtin.include_tasks: read_ami.yml

- name: Test 'connectivity_troubleshooter_local' and 'connectivity_troubleshooter_nat' roles
  block:
    - name: Include 'setup_classic.yml'
      ansible.builtin.include_tasks: setup_classic.yml

    # local
    - name: Include 'connectivity_troubleshooter' role
      ansible.builtin.include_role:
        name: cloud.aws_troubleshooting.connectivity_troubleshooter
        apply:
          ignore_errors: true
      vars:
        connectivity_troubleshooter_destination_ip: "{{ ip_instance_2 }}"
        connectivity_troubleshooter_destination_port: 80
        connectivity_troubleshooter_source_ip: "{{ ip_instance_1 }}"

    # NAT
    # For now this is defaulting to IGW, need to find a way to default to NAT gateway
    # - name: Include 'connectivity_troubleshooter' role
    #   ansible.builtin.include_role:
    #     name: cloud.aws_troubleshooting.connectivity_troubleshooter
    #     apply:
    #       ignore_errors: true
    #   vars:
    #     connectivity_troubleshooter_destination_ip: 8.8.8.8
    #     connectivity_troubleshooter_destination_port: 80
    #     connectivity_troubleshooter_source_ip: "{{ ip_instance_1 }}"

    # IGW
    - name: Include 'connectivity_troubleshooter' role
      ansible.builtin.include_role:
        name: cloud.aws_troubleshooting.connectivity_troubleshooter
        apply:
          ignore_errors: true
      vars:
        connectivity_troubleshooter_destination_ip: 8.8.8.8
        connectivity_troubleshooter_destination_port: 80
        connectivity_troubleshooter_source_ip: "{{ ip_instance_1 }}"

  always:
    - name: Include 'cleanup_classic.yml'
      ansible.builtin.include_tasks: cleanup_classic.yml

- name: Test 'connectivity_troubleshooter_peering' role
  block:
    - name: Include 'setup_destination_peering.yml'
      ansible.builtin.include_tasks: setup_destination_peering.yml

    # Peering
    - name: Include 'connectivity_troubleshooter' role
      ansible.builtin.include_role:
        name: cloud.aws_troubleshooting.connectivity_troubleshooter
      vars:
        connectivity_troubleshooter_destination_ip: "{{ ip_instance_2 }}"
        connectivity_troubleshooter_destination_port: 12345
        connectivity_troubleshooter_source_ip: "{{ ip_instance_1 }}"

  always:
    - name: Include 'cleanup_destination_peering.yml'
      ansible.builtin.include_tasks: cleanup_destination_peering.yml
